$date
	Tue Aug 16 14:50:19 2022
$end
$version
	ModelSim Version 10.5b
$end
$timescale
	1ps
$end

$scope module ALU_tb $end
$var parameter 32 ! A_WIDTH_tb $end
$var parameter 32 " B_WIDTH_tb $end
$var parameter 32 # OUT_WIDTH_tb $end
$var parameter 32 $ ALU_FUN_WIDTH_tb $end
$var parameter 32 % CLK_PERIOD $end
$var reg 8 & A_tb [7:0] $end
$var reg 8 ' B_tb [7:0] $end
$var reg 4 ( ALU_FUN_tb [3:0] $end
$var reg 1 ) ALU_EN_tb $end
$var reg 1 * CLK_tb $end
$var reg 1 + RST_tb $end
$var wire 1 , ALU_OUT_tb [7] $end
$var wire 1 - ALU_OUT_tb [6] $end
$var wire 1 . ALU_OUT_tb [5] $end
$var wire 1 / ALU_OUT_tb [4] $end
$var wire 1 0 ALU_OUT_tb [3] $end
$var wire 1 1 ALU_OUT_tb [2] $end
$var wire 1 2 ALU_OUT_tb [1] $end
$var wire 1 3 ALU_OUT_tb [0] $end
$var wire 1 4 OUT_VALID_tb $end

$scope module DUT $end
$var parameter 32 5 A_WIDTH $end
$var parameter 32 6 B_WIDTH $end
$var parameter 32 7 OUT_WIDTH $end
$var parameter 32 8 ALU_FUN_WIDTH $end
$var wire 1 9 A [7] $end
$var wire 1 : A [6] $end
$var wire 1 ; A [5] $end
$var wire 1 < A [4] $end
$var wire 1 = A [3] $end
$var wire 1 > A [2] $end
$var wire 1 ? A [1] $end
$var wire 1 @ A [0] $end
$var wire 1 A B [7] $end
$var wire 1 B B [6] $end
$var wire 1 C B [5] $end
$var wire 1 D B [4] $end
$var wire 1 E B [3] $end
$var wire 1 F B [2] $end
$var wire 1 G B [1] $end
$var wire 1 H B [0] $end
$var wire 1 I ALU_FUN [3] $end
$var wire 1 J ALU_FUN [2] $end
$var wire 1 K ALU_FUN [1] $end
$var wire 1 L ALU_FUN [0] $end
$var wire 1 M ALU_EN $end
$var wire 1 N CLK $end
$var wire 1 O RST $end
$var reg 8 P ALU_OUT [7:0] $end
$var reg 1 Q OUT_VALID $end
$var wire 1 R Arith_en $end
$var wire 1 S Logic_en $end
$var wire 1 T CMP_en $end
$var wire 1 U Shift_en $end
$var wire 1 V Arith_OUT [7] $end
$var wire 1 W Arith_OUT [6] $end
$var wire 1 X Arith_OUT [5] $end
$var wire 1 Y Arith_OUT [4] $end
$var wire 1 Z Arith_OUT [3] $end
$var wire 1 [ Arith_OUT [2] $end
$var wire 1 \ Arith_OUT [1] $end
$var wire 1 ] Arith_OUT [0] $end
$var wire 1 ^ Logic_OUT [7] $end
$var wire 1 _ Logic_OUT [6] $end
$var wire 1 ` Logic_OUT [5] $end
$var wire 1 a Logic_OUT [4] $end
$var wire 1 b Logic_OUT [3] $end
$var wire 1 c Logic_OUT [2] $end
$var wire 1 d Logic_OUT [1] $end
$var wire 1 e Logic_OUT [0] $end
$var wire 1 f CMP_OUT [7] $end
$var wire 1 g CMP_OUT [6] $end
$var wire 1 h CMP_OUT [5] $end
$var wire 1 i CMP_OUT [4] $end
$var wire 1 j CMP_OUT [3] $end
$var wire 1 k CMP_OUT [2] $end
$var wire 1 l CMP_OUT [1] $end
$var wire 1 m CMP_OUT [0] $end
$var wire 1 n Shift_OUT [7] $end
$var wire 1 o Shift_OUT [6] $end
$var wire 1 p Shift_OUT [5] $end
$var wire 1 q Shift_OUT [4] $end
$var wire 1 r Shift_OUT [3] $end
$var wire 1 s Shift_OUT [2] $end
$var wire 1 t Shift_OUT [1] $end
$var wire 1 u Shift_OUT [0] $end
$var wire 1 v Valid_Arith $end
$var wire 1 w Valid_Logic $end
$var wire 1 x Valid_CMP $end
$var wire 1 y Valid_Shift $end
$var reg 8 z Result_out [7:0] $end
$var reg 1 { Valid $end

$scope module D1 $end
$var parameter 32 | ALU_FUN_WIDTH $end
$var wire 1 I ALU_FUN [1] $end
$var wire 1 J ALU_FUN [0] $end
$var wire 1 M ALU_EN $end
$var reg 1 } Arith_Enable $end
$var reg 1 ~ Logic_Enable $end
$var reg 1 !! CMP_Enable $end
$var reg 1 "! Shift_Enable $end
$upscope $end

$scope module Arith $end
$var parameter 32 #! A_WIDTH $end
$var parameter 32 $! B_WIDTH $end
$var parameter 32 %! OUT_WIDTH $end
$var parameter 32 &! ALU_FUN_WIDTH $end
$var wire 1 9 A [7] $end
$var wire 1 : A [6] $end
$var wire 1 ; A [5] $end
$var wire 1 < A [4] $end
$var wire 1 = A [3] $end
$var wire 1 > A [2] $end
$var wire 1 ? A [1] $end
$var wire 1 @ A [0] $end
$var wire 1 A B [7] $end
$var wire 1 B B [6] $end
$var wire 1 C B [5] $end
$var wire 1 D B [4] $end
$var wire 1 E B [3] $end
$var wire 1 F B [2] $end
$var wire 1 G B [1] $end
$var wire 1 H B [0] $end
$var wire 1 K ALU_FUN [1] $end
$var wire 1 L ALU_FUN [0] $end
$var wire 1 R Arith_Enable $end
$var wire 1 N CLK $end
$var wire 1 O RST $end
$var reg 8 '! Arith_OUT [7:0] $end
$var reg 1 (! OUT_VALID $end
$var reg 8 )! Arith_Result [7:0] $end
$var reg 1 *! VALID $end
$upscope $end

$scope module Logic $end
$var parameter 32 +! A_WIDTH $end
$var parameter 32 ,! B_WIDTH $end
$var parameter 32 -! OUT_WIDTH $end
$var parameter 32 .! ALU_FUN_WIDTH $end
$var wire 1 9 A [7] $end
$var wire 1 : A [6] $end
$var wire 1 ; A [5] $end
$var wire 1 < A [4] $end
$var wire 1 = A [3] $end
$var wire 1 > A [2] $end
$var wire 1 ? A [1] $end
$var wire 1 @ A [0] $end
$var wire 1 A B [7] $end
$var wire 1 B B [6] $end
$var wire 1 C B [5] $end
$var wire 1 D B [4] $end
$var wire 1 E B [3] $end
$var wire 1 F B [2] $end
$var wire 1 G B [1] $end
$var wire 1 H B [0] $end
$var wire 1 K ALU_FUN [1] $end
$var wire 1 L ALU_FUN [0] $end
$var wire 1 S Logic_Enable $end
$var wire 1 N CLK $end
$var wire 1 O RST $end
$var reg 8 /! Logic_OUT [7:0] $end
$var reg 1 0! OUT_VALID $end
$var reg 8 1! Logic_Result [7:0] $end
$var reg 1 2! VALID $end
$upscope $end

$scope module CMP $end
$var parameter 32 3! A_WIDTH $end
$var parameter 32 4! B_WIDTH $end
$var parameter 32 5! OUT_WIDTH $end
$var parameter 32 6! ALU_FUN_WIDTH $end
$var wire 1 9 A [7] $end
$var wire 1 : A [6] $end
$var wire 1 ; A [5] $end
$var wire 1 < A [4] $end
$var wire 1 = A [3] $end
$var wire 1 > A [2] $end
$var wire 1 ? A [1] $end
$var wire 1 @ A [0] $end
$var wire 1 A B [7] $end
$var wire 1 B B [6] $end
$var wire 1 C B [5] $end
$var wire 1 D B [4] $end
$var wire 1 E B [3] $end
$var wire 1 F B [2] $end
$var wire 1 G B [1] $end
$var wire 1 H B [0] $end
$var wire 1 K ALU_FUN [1] $end
$var wire 1 L ALU_FUN [0] $end
$var wire 1 T CMP_Enable $end
$var wire 1 N CLK $end
$var wire 1 O RST $end
$var reg 8 7! CMP_OUT [7:0] $end
$var reg 1 8! OUT_VALID $end
$var reg 8 9! CMP_Result [7:0] $end
$var reg 1 :! VALID $end
$upscope $end

$scope module Shift $end
$var parameter 32 ;! A_WIDTH $end
$var parameter 32 <! B_WIDTH $end
$var parameter 32 =! OUT_WIDTH $end
$var parameter 32 >! ALU_FUN_WIDTH $end
$var wire 1 9 A [7] $end
$var wire 1 : A [6] $end
$var wire 1 ; A [5] $end
$var wire 1 < A [4] $end
$var wire 1 = A [3] $end
$var wire 1 > A [2] $end
$var wire 1 ? A [1] $end
$var wire 1 @ A [0] $end
$var wire 1 A B [7] $end
$var wire 1 B B [6] $end
$var wire 1 C B [5] $end
$var wire 1 D B [4] $end
$var wire 1 E B [3] $end
$var wire 1 F B [2] $end
$var wire 1 G B [1] $end
$var wire 1 H B [0] $end
$var wire 1 K ALU_FUN [1] $end
$var wire 1 L ALU_FUN [0] $end
$var wire 1 U Shift_Enable $end
$var wire 1 N CLK $end
$var wire 1 O RST $end
$var reg 8 ?! Shift_OUT [7:0] $end
$var reg 1 @! OUT_VALID $end
$var reg 8 A! Shift_Result [7:0] $end
$var reg 1 B! VALID $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 &
b0 '
b0 (
0)
0*
0+
b0 P
0Q
b0 z
0{
0}
0~
0!!
0"!
b0 '!
0(!
b0 )!
0*!
b0 /!
00!
b0 1!
02!
b0 7!
08!
b0 9!
0:!
b0 ?!
0@!
b0 A!
0B!
b1000 !
b1000 "
b1000 #
b100 $
b1100100 %
b1000 5
b1000 6
b1000 7
b100 8
b10 |
b1000 #!
b1000 $!
b1000 %!
b10 &!
b1000 +!
b1000 ,!
b1000 -!
b10 .!
b1000 3!
b1000 4!
b1000 5!
b10 6!
b1000 ;!
b1000 <!
b1000 =!
b10 >!
03
02
01
00
0/
0.
0-
0,
04
0R
0S
0T
0U
0]
0\
0[
0Z
0Y
0X
0W
0V
0e
0d
0c
0b
0a
0`
0_
0^
0m
0l
0k
0j
0i
0h
0g
0f
0u
0t
0s
0r
0q
0p
0o
0n
0v
0w
0x
0y
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
$end
#50000
1*
1N
#100000
1+
0*
1O
0N
#150000
1*
1N
#200000
b101 &
b10 '
1)
0*
1G
1@
1>
1M
0N
1}
1R
b111 )!
1*!
#250000
1*
1N
b111 '!
1(!
1]
1\
1[
1v
b111 z
1{
#300000
0*
0N
#350000
1*
1N
b111 P
1Q
13
12
11
14
#400000
0*
0N
#450000
1*
1N
#500000
0*
0N
#550000
1*
1N
#600000
b1 (
0*
1L
0N
b0 z
0{
b111 z
1{
0*!
b11 )!
1*!
#650000
1*
1N
b11 '!
0[
b0 z
0{
b11 z
1{
#700000
0*
0N
#750000
1*
1N
b11 P
01
#800000
0*
0N
#850000
1*
1N
#900000
0*
0N
#950000
1*
1N
#1000000
b10 (
0*
0L
1K
0N
b0 z
0{
b11 z
1{
0*!
b1010 )!
1*!
#1050000
1*
1N
b1010 '!
0]
1Z
b0 z
0{
b1010 z
1{
#1100000
0*
0N
#1150000
1*
1N
b1010 P
03
10
#1200000
0*
0N
#1250000
1*
1N
#1300000
0*
0N
#1350000
1*
1N
#1400000
b100 &
b11 (
0*
1L
0@
0N
b0 z
0{
b1010 z
1{
0*!
b10 )!
1*!
#1450000
1*
1N
b10 '!
0Z
b0 z
0{
b10 z
1{
#1500000
0*
0N
#1550000
1*
1N
b10 P
00
#1600000
0*
0N
#1650000
1*
1N
#1700000
0*
0N
#1750000
1*
1N
#1800000
b101 &
b100 (
0*
0L
0K
1J
1@
0N
0}
1~
b0 z
0{
0*!
b111 )!
1*!
0R
1S
12!
0*!
b0 )!
#1850000
1*
1N
b0 P
0Q
b0 '!
0(!
10!
02
04
0\
0v
1w
1{
#1900000
0*
0N
#1950000
1*
1N
1Q
14
#2000000
0*
0N
#2050000
1*
1N
#2100000
0*
0N
#2150000
1*
1N
#2200000
b101 (
0*
1L
0N
0{
1{
02!
b111 1!
12!
#2250000
1*
1N
b111 /!
1e
1d
1c
0{
b111 z
1{
#2300000
0*
0N
#2350000
1*
1N
b111 P
13
12
11
#2400000
0*
0N
#2450000
1*
1N
#2500000
0*
0N
#2550000
1*
1N
#2600000
b100 '
b110 (
0*
0L
1K
0G
1F
0N
b0 z
0{
b111 z
1{
02!
b11111011 1!
12!
#2650000
1*
1N
b11111011 /!
0c
1b
1a
1`
1_
1^
b0 z
0{
b11111011 z
1{
#2700000
0*
0N
#2750000
1*
1N
b11111011 P
01
10
1/
1.
1-
1,
#2800000
0*
0N
#2850000
1*
1N
#2900000
0*
0N
#2950000
1*
1N
#3000000
b10 '
b111 (
0*
1L
1G
0F
0N
b0 z
0{
b11111011 z
1{
02!
b11111000 1!
12!
#3050000
1*
1N
b11111000 /!
0e
0d
b0 z
0{
b11111000 z
1{
#3100000
0*
0N
#3150000
1*
1N
b11111000 P
03
02
#3200000
0*
0N
#3250000
1*
1N
#3300000
0*
0N
#3350000
1*
1N
#3400000
b1000 (
0*
0L
0K
0J
1I
0N
0~
1!!
b0 z
0{
02!
b0 1!
12!
0S
1T
1:!
02!
#3450000
1*
1N
b0 P
0Q
b0 /!
00!
18!
00
0/
0.
0-
0,
04
0b
0a
0`
0_
0^
0w
1x
1{
#3500000
0*
0N
#3550000
1*
1N
1Q
14
#3600000
0*
0N
#3650000
1*
1N
#3700000
0*
0N
#3750000
1*
1N
#3800000
b101 '
b1001 (
0*
1L
1H
0G
1F
0N
0{
1{
0:!
b1 9!
1:!
#3850000
1*
1N
b1 7!
1m
0{
b1 z
1{
#3900000
0*
0N
#3950000
1*
1N
b1 P
13
#4000000
0*
0N
#4050000
1*
1N
#4100000
0*
0N
#4150000
1*
1N
#4200000
b10 '
0*
0H
1G
0F
0N
0:!
b0 9!
1:!
#4250000
1*
1N
b0 7!
0m
b0 z
0{
1{
#4300000
0*
0N
#4350000
1*
1N
b0 P
03
#4400000
0*
0N
#4450000
1*
1N
#4500000
0*
0N
#4550000
1*
1N
#4600000
b1010 (
0*
0L
1K
0N
0{
1{
0:!
b10 9!
1:!
#4650000
1*
1N
b10 7!
1l
0{
b10 z
1{
#4700000
0*
0N
#4750000
1*
1N
b10 P
12
#4800000
0*
0N
#4850000
1*
1N
#4900000
0*
0N
#4950000
1*
1N
#5000000
b10 &
b101 '
0*
1H
0G
1F
0@
1?
0>
0N
0:!
b0 9!
1:!
#5050000
1*
1N
b0 7!
0l
b0 z
0{
1{
#5100000
0*
0N
#5150000
1*
1N
b0 P
02
#5200000
0*
0N
#5250000
1*
1N
#5300000
0*
0N
#5350000
1*
1N
#5400000
b1011 (
0*
1L
0N
0{
1{
0:!
b11 9!
1:!
#5450000
1*
1N
b11 7!
1m
1l
0{
b11 z
1{
#5500000
0*
0N
#5550000
1*
1N
b11 P
13
12
#5600000
0*
0N
#5650000
1*
1N
#5700000
0*
0N
#5750000
1*
1N
#5800000
b101 &
b10 '
0*
0H
1G
0F
1@
0?
1>
0N
0:!
b0 9!
1:!
#5850000
1*
1N
b0 7!
0m
0l
b0 z
0{
1{
#5900000
0*
0N
#5950000
1*
1N
b0 P
03
02
#6000000
0*
0N
#6050000
1*
1N
#6100000
0*
0N
#6150000
1*
1N
#6200000
b1100 (
0*
0L
0K
1J
0N
0!!
1"!
0{
0:!
1:!
0T
1U
b10 A!
1B!
0:!
#6250000
1*
1N
0Q
08!
b10 ?!
1@!
04
0x
1t
1y
b10 z
1{
#6300000
0*
0N
#6350000
1*
1N
b10 P
1Q
12
14
#6400000
0*
0N
#6450000
1*
1N
#6500000
0*
0N
#6550000
1*
1N
#6600000
b1101 (
0*
1L
0N
b0 z
0{
b10 z
1{
0B!
b1010 A!
1B!
#6650000
1*
1N
b1010 ?!
1r
b0 z
0{
b1010 z
1{
#6700000
0*
0N
#6750000
1*
1N
b1010 P
10
#6800000
0*
0N
#6850000
1*
1N
#6900000
0*
0N
#6950000
1*
1N
#7000000
b1110 (
0*
0L
1K
0N
b0 z
0{
b1010 z
1{
0B!
b1 A!
1B!
#7050000
1*
1N
b1 ?!
1u
0t
0r
b0 z
0{
b1 z
1{
#7100000
0*
0N
#7150000
1*
1N
b1 P
13
02
00
#7200000
0*
0N
#7250000
1*
1N
#7300000
0*
0N
#7350000
1*
1N
#7400000
b1111 (
0*
1L
0N
b0 z
0{
b1 z
1{
0B!
b100 A!
1B!
#7450000
1*
1N
b100 ?!
0u
1s
b0 z
0{
b100 z
1{
#7500000
0*
0N
#7550000
1*
1N
b100 P
03
11
#7600000
0*
0N
#7650000
1*
1N
#7700000
0*
0N
#7750000
1*
1N
#7800000
0*
0N
#7850000
1*
1N
#7900000
0*
0N
#7950000
1*
1N
#8000000
0*
0N
#8050000
1*
1N
#8100000
0*
0N
#8150000
1*
1N
#8200000
0*
0N
#8250000
1*
1N
#8300000
0*
0N
#8350000
1*
1N
#8400000
0*
0N
#8450000
1*
1N
#8500000
0*
0N
#8550000
1*
1N
#8600000
0*
0N
#8650000
1*
1N
